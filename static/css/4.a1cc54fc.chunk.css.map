{"version":3,"sources":["webpack://src/.linaria-cache/src/components/src/components/RemoveIcon.js","webpack://src/.linaria-cache/src/components/src/components/Resource.js"],"names":[".wto66a6",".h1pleut5",".drz5gw7",".t1jifid8",".d1rsjyo9",".i13hp29h"],"mappings":"AA6BMA,SAAAA,cAAAA,CAAAA,eAAAA,CAAAA,gBAAAA,CAAAA,eAAAA,SAAAA,CAAAA,yBAAAA,SAAAA,YAAAA,CAAAA,CAAAA,aAAAA,SAAAA,YAAAA,CAAAA,CCkCAC,UAAAA,YAAAA,CAAAA,kBAAAA,CAAAA,6BAAAA,CAMAC,SAAAA,UAAAA,CAIAC,UAAAA,YAAAA,CAAAA,kBAAAA,CAAAA,aAAAA,CAAAA,eAAAA,CAAAA,YAAAA,CAAAA,kBAAAA,CAAAA,yBAAAA,UAAAA,cAAAA,CAAAA,CAaAC,UAAAA,cAAAA,CAAAA,iBAAAA,CAAAA,eAAAA,CAAAA,yBAAAA,UAAAA,YAAAA,CAAAA,CAUAC,UAAAA,yBAAAA,CAAAA,cAAAA,CAAAA,WAAAA,CAAAA,YAAAA,CAAAA,WAAAA,CAAAA,iBAAAA,CAAAA,iBAAAA,CAAAA,qBAAAA","file":"4.a1cc54fc.chunk.css","sourcesContent":["import React, { memo, useCallback, useContext } from 'react'\n// import styled from 'styled-components'\nimport { styled } from '@linaria/react'\nimport * as Sentry from '@sentry/react'\n\nimport { ActionType, AppContext } from '../AppContext'\n\nconst RemoveIcon = ({ slug }) => {\n\tconst [, dispatch] = useContext(AppContext)\n\n\tconst handleClick = useCallback(() => {\n\t\tdispatch({ type: ActionType.REMOVE_PRODUCT, slug })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'product-removed',\n\t\t\tmessage: `Removed: ${slug}`,\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\t}, [dispatch, slug])\n\n\treturn (\n\t\t<Wrapper onClick={handleClick}>\n\t\t\t<i className=\"fas fa-times-circle\" title=\"Remove\" />\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(RemoveIcon)\n\nconst Wrapper = styled.span`\n\tfont-size: 16px;\n\tmargin-left: 8px;\n\tmargin-right: 8px;\n\t:hover {\n\t\tcolor: red;\n\t}\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n\n\t@media print {\n\t\tdisplay: none;\n\t}\n`\n","import React, { memo } from 'react'\n// import styled from 'styled-components'\nimport { styled } from '@linaria/react'\n\nimport { getItemDefinition, getItemIcon } from 'loaders/items'\nimport { getRecipeDefinition, getRecipesByItemProduct, handcraftingProducers, sortRecipesByName } from 'loaders/recipes'\n\n// import Recipe from './Recipe'\nimport RemoveIcon from './RemoveIcon'\n\nconst Recipe = React.lazy(() => import('components/Recipe'))\n\nconst imageSize = 100\n\nconst Resource = ({ slug }) => {\n\t// const slug = 'item-iron-screw'\n\tconst product = getItemDefinition(slug)\n\n\tconst recipeSlugs = getRecipesByItemProduct(slug)\n\n\tconst sortedSlugs = sortRecipesByName(recipeSlugs)\n\n\t// TODO REDUCE THIS!!!\n\t// Why do it once when you can do it TWICE!!!\n\tconst recipes = React.useMemo(() => {\n\t\treturn sortedSlugs.filter(slug => {\n\t\t\tconst recipe = getRecipeDefinition(slug)\n\n\t\t\tconst validProducers = recipe.producedIn.filter(p => !handcraftingProducers.has(p))\n\t\t\tif (validProducers.length === 0) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\treturn true\n\t\t})\n\t}, [sortedSlugs])\n\n\tif (recipes.length === 0) return null\n\n\tconst iconSrc = getItemIcon(slug)\n\n\treturn (\n\t\t<>\n\t\t\t<Header id={slug}>\n\t\t\t\t<Details>\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t{product.name} <RemoveIcon slug={slug} />\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Description>{product.description}</Description>\n\t\t\t\t</Details>\n\t\t\t\t{iconSrc && <Image alt={product.name} src={iconSrc} width={imageSize} height={imageSize} />}\n\t\t\t</Header>\n\t\t\t<div>\n\t\t\t\t{recipes.map(key => (\n\t\t\t\t\t<Recipe slug={key} key={key} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default memo(Resource)\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n`\n\nconst Details = styled.div`\n\twidth: 100%;\n`\n\nconst Title = styled.h1`\n\tmargin-top: 0;\n\tmargin-bottom: 12px;\n\tdisplay: block;\n\tline-height: 1.2;\n\tdisplay: flex;\n\talign-items: center;\n\n\t@media (max-width: 400px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst Description = styled.div`\n\tfont-size: 12px;\n\tmargin-right: 16px;\n\tline-height: 1.5;\n\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n`\n\nconst Image = styled.img`\n\tdisplay: ${props => (props.src ? 'inherit' : 'none')};\n\tmax-width: 100%;\n\twidth: ${imageSize}px;\n\theight: ${imageSize}px;\n\tpadding: 8px;\n\tborder-radius: 5px;\n\tmargin-bottom: 4px;\n\tborder: 1px solid #999;\n`\n"]}