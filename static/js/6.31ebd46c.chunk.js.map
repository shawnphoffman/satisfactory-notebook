{"version":3,"sources":["components/Sidebar/logo.png","components/Sidebar/ProductListItem.js","components/Sidebar/SectionHeader.js","components/Sidebar/SettingCheckbox.js","components/Sidebar/Sidebar.js"],"names":["ProductListItem","onClick","product","getItemDefinition","className","memo","ListItem","SectionHeader","label","HeaderWrapper","SettingCheckbox","hint","id","name","type","checked","onChange","htmlFor","InputContainer","Hint","Sidebar","useContext","handleFractions","useCallback","e","dispatchRecipe","RecipeAction","TOGGLE_FRACTION","Sentry","category","message","level","Info","handleLeftMargin","dispatchProduct","ProductAction","TOGGLE_LEFT_MARGIN","handleOnePerPage","TOGGLE_ONE_PER_PAGE","handleCycleAmounts","TOGGLE_CYCLE_AMOUNT","handleReturnClick","slug","handleReturnAllClick","RETURN_ALL_PRODUCTS","src","process","alt","width","height","icon","stateRecipe","stateProduct","p","SidebarSection","SidebarWrapper","SectionContent","Logo","Reset","HideMobile","Disclaimer"],"mappings":"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","file":"static/js/6.31ebd46c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.61c5784d.png\";","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport { getItemDefinition } from 'loaders/items'\n\n//\nconst ProductListItem = ({ slug, onClick }) => {\n\tconst product = getItemDefinition(slug)\n\treturn (\n\t\t<ListItem onClick={() => onClick(slug)}>\n\t\t\t{product.name} <i className=\"fas fa-times fa-fw\" />\n\t\t</ListItem>\n\t)\n}\nexport default memo(ProductListItem)\n\nconst ListItem = styled.li`\n\tcolor: darkred;\n\tcursor: pointer;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\n//\nconst SectionHeader = ({ icon, label }) => (\n\t<HeaderWrapper>\n\t\t<i className={`fas ${icon} fa-fw`}></i>\n\t\t<span> {label}</span>\n\t</HeaderWrapper>\n)\n\nexport default memo(SectionHeader)\n\nconst HeaderWrapper = styled.div`\n\tmargin: 18px 0 12px 0;\n\tfont-weight: bold;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\n//\nconst SettingCheckbox = ({ label, name, checked, onChange, hint }) => (\n\t<InputContainer>\n\t\t<input id={name} name={name} type=\"checkbox\" checked={checked} onChange={onChange} />\n\t\t<label htmlFor={name}>{label}</label>\n\t\t{hint && <Hint>{hint}</Hint>}\n\t</InputContainer>\n)\n\nexport default memo(SettingCheckbox)\n\nconst InputContainer = styled.div`\n\tmargin: 12px 0 12px 18px;\n\tfont-size: 0.9em;\n`\nconst Hint = styled.div`\n\tfont-size: 0.8em;\n\tfont-style: italic;\n\tmargin-left: 18px;\n\tmargin-top: 2px;\n\tcolor: #444;\n`\n","import React, { memo, useCallback, useContext } from 'react'\nimport { styled } from '@linaria/react'\nimport * as Sentry from '@sentry/react'\n\nimport { ProductAction, ProductContext } from '../../context/ProductContext'\nimport { RecipeAction, RecipeContext } from '../../context/RecipeContext'\nimport logo from './logo.png'\nimport ProductListItem from './ProductListItem'\nimport SectionHeader from './SectionHeader'\nimport SettingCheckbox from './SettingCheckbox'\n\n//\nconst Sidebar = () => {\n\tconst [stateProduct, dispatchProduct] = useContext(ProductContext)\n\tconst [stateRecipe, dispatchRecipe] = useContext(RecipeContext)\n\n\tconst handleFractions = useCallback(\n\t\te => {\n\t\t\tdispatchRecipe({ type: RecipeAction.TOGGLE_FRACTION })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'setting-change',\n\t\t\t\tmessage: 'Fraction changed',\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\t\t},\n\t\t[dispatchRecipe]\n\t)\n\tconst handleLeftMargin = useCallback(\n\t\te => {\n\t\t\tdispatchProduct({ type: ProductAction.TOGGLE_LEFT_MARGIN })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'setting-change',\n\t\t\t\tmessage: 'Left-margin changed',\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\t\t},\n\t\t[dispatchProduct]\n\t)\n\tconst handleOnePerPage = useCallback(\n\t\te => {\n\t\t\tdispatchProduct({ type: ProductAction.TOGGLE_ONE_PER_PAGE })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'setting-change',\n\t\t\t\tmessage: 'One-per-page changed',\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\t\t},\n\t\t[dispatchProduct]\n\t)\n\tconst handleCycleAmounts = useCallback(\n\t\te => {\n\t\t\tdispatchRecipe({ type: RecipeAction.TOGGLE_CYCLE_AMOUNT })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'setting-change',\n\t\t\t\tmessage: 'Cycle-amounts changed',\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\t\t},\n\t\t[dispatchRecipe]\n\t)\n\tconst handleReturnClick = useCallback(\n\t\tslug => {\n\t\t\tdispatchProduct({ type: ProductAction.RETURN_PRODUCT, slug })\n\n\t\t\tSentry.addBreadcrumb({\n\t\t\t\tcategory: 'product-returned',\n\t\t\t\tmessage: `Returned: ${slug}`,\n\t\t\t\tlevel: Sentry.Severity.Info,\n\t\t\t})\n\t\t},\n\t\t[dispatchProduct]\n\t)\n\tconst handleReturnAllClick = useCallback(() => {\n\t\tdispatchProduct({ type: ProductAction.RETURN_ALL_PRODUCTS })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'all-products-returned',\n\t\t\tmessage: 'Returned all products',\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\t}, [dispatchProduct])\n\n\treturn (\n\t\t<SidebarWrapper>\n\t\t\t<div>\n\t\t\t\t{/* <Logo src={logo} alt=\"Satisfactory Notebook\" width=\"260\" height=\"81\" /> */}\n\t\t\t\t<Logo src={`${process.env.REACT_APP_STATIC_PATH || ''}${logo}`} alt=\"Satisfactory Notebook\" width=\"260\" height=\"81\" />\n\t\t\t</div>\n\n\t\t\t<SidebarSection>\n\t\t\t\t<SectionHeader icon=\"fa-cog\" label=\"Settings\" />\n\t\t\t\t<SettingCheckbox\n\t\t\t\t\tlabel=\"Use Fractions\"\n\t\t\t\t\tname=\"fractions\"\n\t\t\t\t\tchecked={stateRecipe.checked}\n\t\t\t\t\tonChange={handleFractions}\n\t\t\t\t\thint=\"Conversions are hard\"\n\t\t\t\t/>\n\t\t\t\t<SettingCheckbox\n\t\t\t\t\tlabel=\"Show Cycle Amounts\"\n\t\t\t\t\tname=\"cycleAmount\"\n\t\t\t\t\tchecked={stateRecipe.cycleAmount}\n\t\t\t\t\tonChange={handleCycleAmounts}\n\t\t\t\t\thint=\"Include per cycle inputs/outputs\"\n\t\t\t\t/>\n\t\t\t\t<HideMobile>\n\t\t\t\t\t<SettingCheckbox\n\t\t\t\t\t\tlabel=\"Pad Left Margin\"\n\t\t\t\t\t\tname=\"leftMargin\"\n\t\t\t\t\t\tchecked={stateProduct.padLeftMargin}\n\t\t\t\t\t\tonChange={handleLeftMargin}\n\t\t\t\t\t\thint=\"To account for punched holes\"\n\t\t\t\t\t/>\n\t\t\t\t\t<SettingCheckbox\n\t\t\t\t\t\tlabel=\"One Recipe Per Page\"\n\t\t\t\t\t\tname=\"onePerPage\"\n\t\t\t\t\t\tchecked={stateProduct.onePerPage}\n\t\t\t\t\t\tonChange={handleOnePerPage}\n\t\t\t\t\t\thint=\"Waste ALL the paper\"\n\t\t\t\t\t/>\n\t\t\t\t</HideMobile>\n\t\t\t</SidebarSection>\n\n\t\t\t{/*  */}\n\t\t\t<HideMobile>\n\t\t\t\t<SidebarSection>\n\t\t\t\t\t<SectionHeader icon=\"fa-print\" label=\"Print Settings\" />\n\t\t\t\t\t<SectionContent>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Margins:</strong> None\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Scale:</strong> 100\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<strong>Background Graphics:</strong> ✅️\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</SectionContent>\n\t\t\t\t</SidebarSection>\n\t\t\t</HideMobile>\n\n\t\t\t{stateProduct.removedProducts.length > 0 && (\n\t\t\t\t<SidebarSection>\n\t\t\t\t\t<SectionHeader icon=\"fa-filter\" label=\"Filtered Items\" />\n\t\t\t\t\t<SectionContent>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<Reset onClick={handleReturnAllClick}>Reset All</Reset>\n\t\t\t\t\t\t\t{stateProduct.removedProducts.map(p => (\n\t\t\t\t\t\t\t\t<ProductListItem slug={p} key={p} onClick={handleReturnClick} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</SectionContent>\n\t\t\t\t</SidebarSection>\n\t\t\t)}\n\t\t\t<Disclaimer>\n\t\t\t\tAssets come from Satisfactory or from websites created and owned by Coffee Stain Studios. All copyright and registered trademarks\n\t\t\t\tpresent in the images are proprietary to Coffee Stain Studios.\n\t\t\t</Disclaimer>\n\t\t</SidebarWrapper>\n\t)\n}\n\nexport default memo(Sidebar)\n\nconst SidebarSection = styled.div`\n\tmargin: 6px 0;\n`\n\nconst SidebarWrapper = styled.div`\n\tmin-width: 260px;\n\tbackground: #bbb;\n\tposition: sticky;\n\ttop: 0;\n\theight: 100vh;\n\tpadding: 10px;\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\n\t@media print {\n\t\tdisplay: none;\n\t}\n\n\t/* TODO - Extract the max-width to variable */\n\t@media screen and (max-width: 600px) {\n\t\twidth: 100%;\n\t\tposition: unset;\n\t\theight: auto;\n\t}\n`\n\nconst SectionContent = styled.div`\n\tfont-size: 0.8em;\n\tmargin: 12px 0 12px 18px;\n`\n\nconst Logo = styled.img`\n\tmax-width: 100%;\n\theight: auto;\n`\n\nconst Reset = styled.li`\n\tcolor: darkred;\n\tcursor: pointer;\n\tfont-weight: bold;\n`\n\nconst HideMobile = styled.div`\n\t@media (max-width: 600px) {\n\t\tdisplay: none;\n\t}\n`\n\nconst Disclaimer = styled.div`\n\twidth: 240px;\n\tfont-size: 11px;\n\tcolor: #555;\n\tline-height: 1.4;\n\tfont-style: italic;\n\tflex: 1;\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tflex-direction: column;\n\n\t@media print {\n\t\tdisplay: none;\n\t}\n\n\t@media (max-width: 600px) {\n\t\tdisplay: none;\n\t}\n`\n"],"sourceRoot":""}