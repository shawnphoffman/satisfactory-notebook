{"version":3,"sources":["components/Recipe.js"],"names":["FractionString","memo","fraction","indexOf","splits","split","hasWhole","includes","whole","numer","denom","style","fontSize","Ingredient","slug","amount","duration","useContext","AppContext","fractions","cycleAmount","itemDef","getItemDefinition","rate","calculateRate","form","IngredientContainer","IngredientLabel","icon","IngredientIcon","src","getItemIcon","alt","name","width","height","marginRight","perCycle","perCycleLabel","IngredientName","href","whiteSpace","lineHeight","perMinFraction","perMin","perMinLabel","RemoveIcon","dispatch","handleClick","useCallback","type","ActionType","REMOVE_PRODUCT","RemoveWrapper","onClick","className","title","Recipe","product","recipeSlugs","getRecipesByItemProduct","recipes","sortRecipesByName","filter","recipe","getRecipeDefinition","ingredients","length","producedIn","p","handcraftingProducers","has","Header","id","RecipeTitle","RecipeDescription","description","Icon","List","map","key","validProducers","building","getBuildingName","console","log","RecipeCard","display","marginBottom","CardSecondary","CardTitle","IngredientsContainer","IngredientColumn","i","manufacturingDuration","ArrowSeparator","products","styled","div","h2","img","props","h1","a","span"],"mappings":"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","file":"static/js/4.afd5709f.chunk.js","sourcesContent":["import React, { memo, useCallback, useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { getBuildingName } from 'loaders/buildings'\nimport { getItemDefinition, getItemIcon } from 'loaders/items'\nimport {\n\tcalculateRate,\n\tgetRecipeDefinition,\n\tgetRecipesByItemProduct,\n\thandcraftingProducers,\n\tsortRecipesByName,\n} from 'loaders/recipes'\n\nimport { ActionType, AppContext } from '../AppContext'\n\nconst FractionString = memo(({ fraction }) => {\n\tif (!fraction) return null\n\n\tif (fraction.indexOf('/') < 0) return fraction\n\n\tconst splits = fraction.split(' ')\n\n\tconst hasWhole = fraction.includes(' ')\n\tconst whole = hasWhole ? splits[0] : null\n\tconst numer = hasWhole ? splits[1].split('/')[0] : splits[0].split('/')[0]\n\tconst denom = hasWhole ? splits[1].split('/')[1] : splits[0].split('/')[1]\n\n\treturn (\n\t\t<>\n\t\t\t{whole && `${whole} `}\n\t\t\t<span style={{ fontSize: '0.8em' }}>\n\t\t\t\t<sup>{numer}</sup>&frasl;<sub>{denom}</sub>&nbsp;\n\t\t\t</span>\n\t\t</>\n\t)\n})\n\nconst Ingredient = memo(({ slug, amount, duration }) => {\n\tconst [{ fractions, cycleAmount }] = useContext(AppContext)\n\tconst itemDef = getItemDefinition(slug)\n\tconst rate = calculateRate(amount, duration, itemDef.form === 2)\n\treturn (\n\t\t<IngredientContainer key={slug}>\n\t\t\t<IngredientLabel>\n\t\t\t\t{itemDef.icon ? (\n\t\t\t\t\t<IngredientIcon src={getItemIcon(slug)} alt={itemDef.name} width=\"30\" height=\"30\" />\n\t\t\t\t) : null}\n\t\t\t\t{cycleAmount && (\n\t\t\t\t\t<span style={{ marginRight: 5 }}>\n\t\t\t\t\t\t{rate.perCycle}\n\t\t\t\t\t\t{rate.perCycleLabel}\n\t\t\t\t\t</span>\n\t\t\t\t)}\n\t\t\t\t<IngredientName href={`#${slug}`}>{itemDef.name}</IngredientName>\n\t\t\t</IngredientLabel>\n\t\t\t<div style={{ whiteSpace: 'nowrap', lineHeight: 1.2 }}>\n\t\t\t\t{fractions ? (\n\t\t\t\t\t<strong>\n\t\t\t\t\t\t<FractionString fraction={rate.perMinFraction} />\n\t\t\t\t\t</strong>\n\t\t\t\t) : (\n\t\t\t\t\t<strong>{rate.perMin}</strong>\n\t\t\t\t)}\n\t\t\t\t<small>{rate.perMinLabel}</small>\n\t\t\t</div>\n\t\t</IngredientContainer>\n\t)\n})\n\nconst RemoveIcon = memo(({ slug }) => {\n\tconst [, dispatch] = useContext(AppContext)\n\n\tconst handleClick = useCallback(() => dispatch({ type: ActionType.REMOVE_PRODUCT, slug }), [\n\t\tdispatch,\n\t\tslug,\n\t])\n\n\treturn (\n\t\t<RemoveWrapper onClick={handleClick}>\n\t\t\t<i className=\"fas fa-times-circle\" title=\"Remove\" />\n\t\t</RemoveWrapper>\n\t)\n})\n\nconst Recipe = ({ slug = 'item-plastic' }) => {\n\t// const slug = 'item-iron-screw'\n\tconst product = getItemDefinition(slug)\n\n\tconst recipeSlugs = getRecipesByItemProduct(slug)\n\n\tconst sortedSlugs = sortRecipesByName(recipeSlugs)\n\n\t// Why do it once when you can do it TWICE!!!\n\tconst recipes = sortedSlugs.filter(slug => {\n\t\tconst recipe = getRecipeDefinition(slug)\n\n\t\t// Remove ore recipes\n\t\tif (recipe.ingredients.length === 0) return false\n\n\t\t// Garbage\n\t\t// if (recipe.name.includes('Unpackage')) return false\n\n\t\tconst validProducers = recipe.producedIn.filter(p => !handcraftingProducers.has(p))\n\t\tif (validProducers.length === 0) return false\n\n\t\treturn true\n\t})\n\n\tif (recipes.length === 0) return null\n\n\treturn (\n\t\t<>\n\t\t\t<Header id={slug}>\n\t\t\t\t<div style={{ width: '100%' }}>\n\t\t\t\t\t<RecipeTitle>\n\t\t\t\t\t\t{product.name} <RemoveIcon slug={slug} />\n\t\t\t\t\t</RecipeTitle>\n\t\t\t\t\t<RecipeDescription>{product.description}</RecipeDescription>\n\t\t\t\t</div>\n\t\t\t\t<Icon alt={product.name} src={getItemIcon(slug)} width=\"100\" height=\"100\" />\n\t\t\t</Header>\n\t\t\t<List>\n\t\t\t\t{recipes.map(key => {\n\t\t\t\t\t// HACK\n\t\t\t\t\tconst recipe = getRecipeDefinition(key)\n\n\t\t\t\t\t// // Remove ore recipes\n\t\t\t\t\t// if (recipe.ingredients.length === 0) return null\n\n\t\t\t\t\t// // Garbage\n\t\t\t\t\t// if (recipe.name.includes('Unpackage')) return null\n\n\t\t\t\t\tconst validProducers = recipe.producedIn.filter(p => !handcraftingProducers.has(p))\n\t\t\t\t\tif (validProducers.length === 0) return null\n\n\t\t\t\t\tconst building = getBuildingName(validProducers[0])\n\n\t\t\t\t\tif (!building) {\n\t\t\t\t\t\tconsole.log({\n\t\t\t\t\t\t\trecipe,\n\t\t\t\t\t\t\tproduct,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<RecipeCard key={key} id={key}>\n\t\t\t\t\t\t\t<div style={{ display: 'flex', width: '100%', marginBottom: 4 }}>\n\t\t\t\t\t\t\t\t<CardSecondary>&nbsp;</CardSecondary>\n\t\t\t\t\t\t\t\t<CardTitle>{recipe.name}</CardTitle>\n\t\t\t\t\t\t\t\t<CardSecondary>{building}</CardSecondary>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<IngredientsContainer>\n\t\t\t\t\t\t\t\t{/* Inputs */}\n\t\t\t\t\t\t\t\t<IngredientColumn>\n\t\t\t\t\t\t\t\t\t{recipe.ingredients.map(i => (\n\t\t\t\t\t\t\t\t\t\t<Ingredient\n\t\t\t\t\t\t\t\t\t\t\tamount={i.amount}\n\t\t\t\t\t\t\t\t\t\t\tslug={i.slug}\n\t\t\t\t\t\t\t\t\t\t\tduration={recipe.manufacturingDuration}\n\t\t\t\t\t\t\t\t\t\t\tkey={`in-${i.slug}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</IngredientColumn>\n\t\t\t\t\t\t\t\t<ArrowSeparator>&#10148;</ArrowSeparator>\n\t\t\t\t\t\t\t\t{/* Outputs */}\n\t\t\t\t\t\t\t\t<IngredientColumn>\n\t\t\t\t\t\t\t\t\t{recipe.products.map(p => (\n\t\t\t\t\t\t\t\t\t\t<Ingredient\n\t\t\t\t\t\t\t\t\t\t\tamount={p.amount}\n\t\t\t\t\t\t\t\t\t\t\tslug={p.slug}\n\t\t\t\t\t\t\t\t\t\t\tduration={recipe.manufacturingDuration}\n\t\t\t\t\t\t\t\t\t\t\tkey={`out-${p.slug}`}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</IngredientColumn>\n\t\t\t\t\t\t\t</IngredientsContainer>\n\t\t\t\t\t\t</RecipeCard>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</List>\n\t\t</>\n\t)\n}\n\nexport default memo(Recipe)\n\nconst List = styled.div`\n\t/* display: flex; */\n\t/* flex-wrap: wrap; */\n\t/* flex-direction: column; */\n`\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n`\n\nconst RecipeDescription = styled.div`\n\tfont-size: 12px;\n\tmargin-right: 16px;\n\tline-height: 1.5;\n\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n`\n\nconst ArrowSeparator = styled.div`\n\tflex: 0;\n\tmargin: 8px;\n\n\t@media (max-width: 400px) {\n\t\ttransform: rotate(90deg);\n\t}\n`\n\nconst RecipeCard = styled.div`\n\tdisplay: flex;\n\tborder: 1px solid #999;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 8px;\n\tborder-radius: 5px;\n\tmargin: 4px 0;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\tmax-width: 100%;\n`\n\nconst CardTitle = styled.h2`\n\tmargin: 0;\n\ttext-align: center;\n\tfont-size: 16px;\n\tline-height: 1.2;\n\twidth: 100%;\n`\n\nconst Icon = styled.img`\n\tdisplay: ${props => (props.src ? 'inherit' : 'none')};\n\tmax-width: 100%;\n\twidth: 100px;\n\theight: 100px;\n\tpadding: 8px;\n\tborder-radius: 5px;\n\tmargin-bottom: 4px;\n\tborder: 1px solid #999;\n`\n\nconst IngredientIcon = styled.img`\n\tmax-width: 100%;\n\twidth: 30px;\n\theight: 30px;\n\tmargin-right: 3px;\n`\n\nconst IngredientColumn = styled.div`\n\tflex: 1;\n\twidth: 100%;\n`\n\nconst IngredientsContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\n\t@media (max-width: 400px) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst IngredientLabel = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 12px;\n\tline-height: 1.2;\n`\n\nconst IngredientContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin: 2px 0px;\n\tbackground: #ededed;\n\tpadding: 4px 5px;\n\tborder-radius: 5px;\n`\n\nconst RecipeTitle = styled.h1`\n\tmargin-top: 0;\n\tmargin-bottom: 12px;\n\tdisplay: block;\n\tline-height: 1.2;\n\tdisplay: flex;\n\talign-items: center;\n\n\t@media (max-width: 400px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst CardSecondary = styled.div`\n\tflex: 1 1 20%;\n\ttext-align: right;\n\tfont-size: 11px;\n\tfont-style: italic;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tdisplay: flex;\n\tcolor: #444;\n`\n\nconst IngredientName = styled.a`\n\t/* white-space: nowrap; */\n\t/* text-overflow: ellipsis; */\n\t/* overflow: hidden; */\n\tpadding-right: 3px;\n`\n\nconst RemoveWrapper = styled.span`\n\tfont-size: 16px;\n\tmargin-left: 8px;\n\tmargin-right: 8px;\n\t:hover {\n\t\tcolor: red;\n\t}\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n\n\t@media print {\n\t\tdisplay: none;\n\t}\n`\n"],"sourceRoot":""}