{"version":3,"sources":["components/RemoveIcon.js","components/Resource.js"],"names":["RemoveIcon","slug","useContext","handleClick","useCallback","dispatch","type","ActionType","Sentry","category","message","level","Info","onClick","className","title","memo","Wrapper","Recipe","React","Resource","product","getItemDefinition","recipeSlugs","getRecipesByItemProduct","sortedSlugs","sortRecipesByName","recipes","getRecipeDefinition","recipe","p","handcraftingProducers","validProducers","iconSrc","getItemIcon","id","alt","src","width","height","key","Header","Details","Title","Description","Image","props"],"mappings":"yQAOMA,EAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACXC,qBAArB,KAAM,EAD0B,oBAG1BC,EAAcC,uBAAY,WAC/BC,EAAS,CAAEC,KAAMC,IAAR,eAAmCN,SAE5CO,IAAqB,CACpBC,SADoB,kBAEpBC,QAAQ,YAAD,OAFa,GAGpBC,MAAOH,IAAgBI,SAEtB,CAACP,EARJ,IAUA,OACC,iBAASQ,QAAT,WACC,mBAAGC,UAAH,sBAAmCC,MAAnC,cAKYC,iBAAf,GAEMC,EAAO,sD,MCnBb,IAAMC,EAASC,UAAW,kBAAM,gCAI1BC,EAAW,SAAC,GAAc,IAAZnB,EAAW,EAAXA,KAEboB,EAAUC,YAAhB,GAEMC,EAAcC,YAApB,GAEMC,EAAcC,YANU,GAUxBC,EAAU,aAAc,WAC7B,OAAOF,EAAA,QAAmBxB,YAIzB,WAHe2B,YAAf,GAEuBC,mBAAyBC,YAAC,OAAKC,QAAtD,MACIC,YAMH,CAXH,IAaA,OAAIL,SAAsB,OAAO,KAEjC,IAAMM,EAAUC,YAAhB,GAEA,OACC,qCACC,kBAAQC,GAAR,YACC,4BACC,4BACEd,EAAD,KADD,IACgB,iBAAYpB,KAAZ,OAEhB,0BAAcoB,EAAD,iBAEbY,GAAW,iBAAOG,IAAKf,EAAZ,KAA0BgB,IAA1B,EAAwCC,MAtCxD,IAsC0EC,OAtC1E,SAwCG,8BACEZ,OAAYa,YAAG,OACf,iBAAQvC,KAAR,GADD,YAUEwC,GAFSzB,yBAAf,GAEY,sDAMN0B,EAAO,qDAIPC,EAAK,mDAaLC,EAAW,0DAUXC,EAAK,sEACCC,YAAK,OAAKA,gBADX,Y","file":"static/js/4.853a313d.chunk.js","sourcesContent":["import React, { memo, useCallback, useContext } from 'react'\n// import styled from 'styled-components'\nimport { styled } from '@linaria/react'\nimport * as Sentry from '@sentry/react'\n\nimport { ActionType, AppContext } from '../AppContext'\n\nconst RemoveIcon = ({ slug }) => {\n\tconst [, dispatch] = useContext(AppContext)\n\n\tconst handleClick = useCallback(() => {\n\t\tdispatch({ type: ActionType.REMOVE_PRODUCT, slug })\n\n\t\tSentry.addBreadcrumb({\n\t\t\tcategory: 'product-removed',\n\t\t\tmessage: `Removed: ${slug}`,\n\t\t\tlevel: Sentry.Severity.Info,\n\t\t})\n\t}, [dispatch, slug])\n\n\treturn (\n\t\t<Wrapper onClick={handleClick}>\n\t\t\t<i className=\"fas fa-times-circle\" title=\"Remove\" />\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(RemoveIcon)\n\nconst Wrapper = styled.span`\n\tfont-size: 16px;\n\tmargin-left: 8px;\n\tmargin-right: 8px;\n\t:hover {\n\t\tcolor: red;\n\t}\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n\n\t@media print {\n\t\tdisplay: none;\n\t}\n`\n","import React, { memo } from 'react'\n// import styled from 'styled-components'\nimport { styled } from '@linaria/react'\n\nimport { getItemDefinition, getItemIcon } from 'loaders/items'\nimport { getRecipeDefinition, getRecipesByItemProduct, handcraftingProducers, sortRecipesByName } from 'loaders/recipes'\n\n// import Recipe from './Recipe'\nimport RemoveIcon from './RemoveIcon'\n\nconst Recipe = React.lazy(() => import('components/Recipe'))\n\nconst imageSize = 100\n\nconst Resource = ({ slug }) => {\n\t// const slug = 'item-iron-screw'\n\tconst product = getItemDefinition(slug)\n\n\tconst recipeSlugs = getRecipesByItemProduct(slug)\n\n\tconst sortedSlugs = sortRecipesByName(recipeSlugs)\n\n\t// TODO REDUCE THIS!!!\n\t// Why do it once when you can do it TWICE!!!\n\tconst recipes = React.useMemo(() => {\n\t\treturn sortedSlugs.filter(slug => {\n\t\t\tconst recipe = getRecipeDefinition(slug)\n\n\t\t\tconst validProducers = recipe.producedIn.filter(p => !handcraftingProducers.has(p))\n\t\t\tif (validProducers.length === 0) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\treturn true\n\t\t})\n\t}, [sortedSlugs])\n\n\tif (recipes.length === 0) return null\n\n\tconst iconSrc = getItemIcon(slug)\n\n\treturn (\n\t\t<>\n\t\t\t<Header id={slug}>\n\t\t\t\t<Details>\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t{product.name} <RemoveIcon slug={slug} />\n\t\t\t\t\t</Title>\n\t\t\t\t\t<Description>{product.description}</Description>\n\t\t\t\t</Details>\n\t\t\t\t{iconSrc && <Image alt={product.name} src={iconSrc} width={imageSize} height={imageSize} />}\n\t\t\t</Header>\n\t\t\t<div>\n\t\t\t\t{recipes.map(key => (\n\t\t\t\t\t<Recipe slug={key} key={key} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default memo(Resource)\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n`\n\nconst Details = styled.div`\n\twidth: 100%;\n`\n\nconst Title = styled.h1`\n\tmargin-top: 0;\n\tmargin-bottom: 12px;\n\tdisplay: block;\n\tline-height: 1.2;\n\tdisplay: flex;\n\talign-items: center;\n\n\t@media (max-width: 400px) {\n\t\tfont-size: 24px;\n\t}\n`\n\nconst Description = styled.div`\n\tfont-size: 12px;\n\tmargin-right: 16px;\n\tline-height: 1.5;\n\n\t@media (max-width: 400px) {\n\t\tdisplay: none;\n\t}\n`\n\nconst Image = styled.img`\n\tdisplay: ${props => (props.src ? 'inherit' : 'none')};\n\tmax-width: 100%;\n\twidth: ${imageSize}px;\n\theight: ${imageSize}px;\n\tpadding: 8px;\n\tborder-radius: 5px;\n\tmargin-bottom: 4px;\n\tborder: 1px solid #999;\n`\n"],"sourceRoot":""}