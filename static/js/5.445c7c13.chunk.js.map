{"version":3,"sources":["components/Ingredients/CycleRate.js","components/Ingredients/Fraction.js","components/Ingredients/Rate.js","components/Ingredients/Ingredient.js","components/Resources/Recipe.js"],"names":["CycleRate","perCycleLabel","useContext","cycleAmount","memo","CycleAmount","SmallPart","Fraction","fraction","splits","hasWhole","whole","numer","denom","Rate","perMinFraction","perMin","RecipeContext","fractions","Ingredient","duration","itemDef","getItemDefinition","rate","calculateRate","amount","src","process","getItemIcon","alt","width","height","perCycle","href","Wrapper","Header","Image","Name","Quantity","Recipe","slug","recipe","getRecipeDefinition","validProducers","React","p","handcraftingProducers","building","getBuildingName","id","i","className","Arrow","Title","Column","IngredientsWrapper","Secondary"],"mappings":"gNAMMA,EAAY,SAAC,GAAgC,IAAhC,EAAgC,EAAhC,SAAYC,EAAoB,EAApBA,cAAoB,EACxBC,qBAA1B,KACA,OAFkD,oBACzCC,YAGR,4BACC,EACA,KAJuB,MASXC,iBAAf,GAEMC,EAAW,0D,MChBjB,IAAMC,EAAS,yDAITC,EAAW,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACnB,MAAe,OAAO,KAEtB,GAAIA,eAAJ,EAA+B,OAAOA,EAEtC,IAAMC,EAASD,QAAf,KACME,EAAWF,WAAjB,KACMG,EAAQD,EAAWD,EAAH,GAAtB,KACMG,EAAQF,EAAWD,gBAAH,GAA6BA,gBAAnD,GACMI,EAAQH,EAAWD,gBAAH,GAA6BA,gBAAnD,GAEA,OACC,qCACEE,GAAS,GAAJ,OAAN,EAAM,KACN,4BACC,8BAAK,IADN,SAC0B,8BAAK,IAD/B,cAOYP,iBAAf,G,MCrBA,IAAMU,EAAO,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAAa,EACpBd,qBAAWe,KAA1BC,EADmC,oBACnCA,UACT,OAAO,iCAASA,EAAY,cAAC,EAAD,CAAUV,SAAUO,IAAqBC,KAGvDZ,iBAAKU,GCAdK,EAAa,SAAC,GAA+B,IAA/B,EAA+B,EAA/B,OAA+B,EAA/B,OAAgBC,EAAe,EAAfA,SAC7BC,EAAUC,YAAhB,GACMC,EAAOC,YAAcC,EAAQL,EAAnC,IAA6CC,QAE7C,OACC,4BACC,4BACEA,OACA,iBACCK,IAAA,UAAQC,+DAAR,OAAkDC,YADnD,IAECC,IAAKR,EAFN,KAGCS,MAdN,GAeMC,OAfN,KAUI,KAQA,iBAAW9B,cAAesB,EAA1B,cAA8CS,SAAUT,EAAxD,WACA,iBAAMU,KAAA,WAAN,YAAyBZ,EAAD,UAEzB,4BACC,iBAAML,OAAQO,EAAd,OAA2BR,eAAgBQ,EAA3C,iBACA,gCAAQA,EAAD,mBAfT,IAqBanB,iBAAf,GAEM8B,EAAO,sDAWPC,EAAM,qDAONC,EAAK,mDAOLC,EAAI,gDAIJC,EAAQ,uD,kBC9DRC,EAAS,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACXC,EAASC,YAAf,GAEMC,EAAiBC,aAAc,kBAAMH,qBAAyBI,YAAC,OAAKC,QAAnDF,QAAkF,CAACH,EAA1G,aACA,OAAIE,SAA6B,OAAO,KAExC,IAAMI,EAAWC,YAAgBL,EAAjC,IAEA,OACC,kBAASM,GAAT,YACC,4BACC,mCACA,0BAAQR,EAAD,OACP,0BAAW,OAEZ,4BAEC,0BACEA,mBAAuBS,YAAC,OACxB,iBAAYzB,OAAQyB,EAApB,OAA8BV,KAAMU,EAApC,KAA4C9B,SAAUqB,EAAtD,oCAA+FS,EADhG,YAID,0BACC,mBAAGC,UAAH,4BAGD,0BACEV,gBAAoBI,YAAC,OACrB,iBAAYpB,OAAQoB,EAApB,OAA8BL,KAAMK,EAApC,KAA4CzB,SAAUqB,EAAtD,qCAAgGI,EADjG,mBAWCO,GAFShD,yBAAf,GAEW,oDASL8B,EAAO,qDAaPmB,EAAK,mDAQLC,EAAM,qDAKNC,EAAkB,iEAUlBC,EAAS,wDAWTrB,EAAM,qD","file":"static/js/5.445c7c13.chunk.js","sourcesContent":["import React, { memo, useContext } from 'react'\nimport { styled } from '@linaria/react'\n\nimport { RecipeContext } from 'context/RecipeContext'\n\n//\nconst CycleRate = ({ perCycle, perCycleLabel }) => {\n\tconst [{ cycleAmount }] = useContext(RecipeContext)\n\tif (!cycleAmount) return null\n\treturn (\n\t\t<CycleAmount>\n\t\t\t{perCycle}\n\t\t\t{perCycleLabel}\n\t\t</CycleAmount>\n\t)\n}\n\nexport default memo(CycleRate)\n\nconst CycleAmount = styled.span`\n\tmargin-right: 5px;\n`\n","import { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nconst SmallPart = styled.span`\n\tfont-size: 0.8em;\n`\n\nconst Fraction = ({ fraction }) => {\n\tif (!fraction) return null\n\n\tif (fraction.indexOf('/') < 0) return fraction\n\n\tconst splits = fraction.split(' ')\n\tconst hasWhole = fraction.includes(' ')\n\tconst whole = hasWhole ? splits[0] : null\n\tconst numer = hasWhole ? splits[1].split('/')[0] : splits[0].split('/')[0]\n\tconst denom = hasWhole ? splits[1].split('/')[1] : splits[0].split('/')[1]\n\n\treturn (\n\t\t<>\n\t\t\t{whole && `${whole} `}\n\t\t\t<SmallPart>\n\t\t\t\t<sup>{numer}</sup>&frasl;<sub>{denom}</sub>&nbsp;\n\t\t\t</SmallPart>\n\t\t</>\n\t)\n}\n\nexport default memo(Fraction)\n","import { memo, useContext } from 'react'\n\nimport { RecipeContext } from 'context/RecipeContext'\n\nimport Fraction from './Fraction'\n\n//\nconst Rate = ({ perMinFraction, perMin }) => {\n\tconst [{ fractions }] = useContext(RecipeContext)\n\treturn <strong>{fractions ? <Fraction fraction={perMinFraction} /> : perMin}</strong>\n}\n\nexport default memo(Rate)\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport { getItemDefinition, getItemIcon } from 'loaders/items'\nimport { calculateRate } from 'loaders/recipes'\n\nimport CycleRate from './CycleRate'\nimport Rate from './Rate'\n\nconst imageSize = 30\n\n//\nconst Ingredient = ({ slug, amount, duration }) => {\n\tconst itemDef = getItemDefinition(slug)\n\tconst rate = calculateRate(amount, duration, itemDef.form === 2)\n\n\treturn (\n\t\t<Wrapper key={slug}>\n\t\t\t<Header>\n\t\t\t\t{itemDef.icon ? (\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsrc={`${process.env.REACT_APP_STATIC_PATH || ''}${getItemIcon(slug)}`}\n\t\t\t\t\t\talt={itemDef.name}\n\t\t\t\t\t\twidth={imageSize}\n\t\t\t\t\t\theight={imageSize}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t\t<CycleRate perCycleLabel={rate.perCycleLabel} perCycle={rate.perCycle} />\n\t\t\t\t<Name href={`#${slug}`}>{itemDef.name}</Name>\n\t\t\t</Header>\n\t\t\t<Quantity>\n\t\t\t\t<Rate perMin={rate.perMin} perMinFraction={rate.perMinFraction} />\n\t\t\t\t<small>{rate.perMinLabel}</small>\n\t\t\t</Quantity>\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(Ingredient)\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin: 2px 0px;\n\tbackground: #ededed;\n\tpadding: 4px 5px;\n\tborder-radius: 5px;\n`\n\nconst Header = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tfont-size: 12px;\n\tline-height: 1.2;\n`\n\nconst Image = styled.img`\n\tmax-width: 100%;\n\twidth: ${imageSize}px;\n\theight: ${imageSize}px;\n\tmargin-right: 3px;\n`\n\nconst Name = styled.a`\n\tpadding-right: 3px;\n`\n\nconst Quantity = styled.div`\n\tline-height: 1.2;\n\twhite-space: nowrap;\n`\n","import React, { memo } from 'react'\nimport { styled } from '@linaria/react'\n\nimport Ingredient from 'components/Ingredients/Ingredient'\nimport { getBuildingName } from 'loaders/buildings'\nimport { getRecipeDefinition, handcraftingProducers } from 'loaders/recipes'\n\nconst Recipe = ({ slug }) => {\n\tconst recipe = getRecipeDefinition(slug)\n\n\tconst validProducers = React.useMemo(() => recipe.producedIn.filter(p => !handcraftingProducers.has(p)), [recipe.producedIn])\n\tif (validProducers.length === 0) return null\n\n\tconst building = getBuildingName(validProducers[0])\n\n\treturn (\n\t\t<Wrapper id={slug}>\n\t\t\t<Header>\n\t\t\t\t<Secondary>&nbsp;</Secondary>\n\t\t\t\t<Title>{recipe.name}</Title>\n\t\t\t\t<Secondary>{building}</Secondary>\n\t\t\t</Header>\n\t\t\t<IngredientsWrapper>\n\t\t\t\t{/* Inputs */}\n\t\t\t\t<Column>\n\t\t\t\t\t{recipe.ingredients.map(i => (\n\t\t\t\t\t\t<Ingredient amount={i.amount} slug={i.slug} duration={recipe.manufacturingDuration} key={`in-${i.slug}`} />\n\t\t\t\t\t))}\n\t\t\t\t</Column>\n\t\t\t\t<Arrow>\n\t\t\t\t\t<i className=\"fa fa-arrow-alt-right\" />\n\t\t\t\t</Arrow>\n\t\t\t\t{/* Outputs */}\n\t\t\t\t<Column>\n\t\t\t\t\t{recipe.products.map(p => (\n\t\t\t\t\t\t<Ingredient amount={p.amount} slug={p.slug} duration={recipe.manufacturingDuration} key={`out-${p.slug}`} />\n\t\t\t\t\t))}\n\t\t\t\t</Column>\n\t\t\t</IngredientsWrapper>\n\t\t</Wrapper>\n\t)\n}\n\nexport default memo(Recipe)\n\nconst Arrow = styled.div`\n\tflex: 0;\n\tmargin: 8px;\n\n\t@media (max-width: 400px) {\n\t\ttransform: rotate(90deg);\n\t}\n`\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tborder: 1px solid #999;\n\tflex-direction: column;\n\talign-items: center;\n\tpadding: 8px;\n\tborder-radius: 5px;\n\tmargin: 4px 0;\n\tpage-break-inside: avoid;\n\tbreak-inside: avoid;\n\tmax-width: 100%;\n`\n\nconst Title = styled.h2`\n\tmargin: 0;\n\ttext-align: center;\n\tfont-size: 16px;\n\tline-height: 1.2;\n\twidth: 100%;\n`\n\nconst Column = styled.div`\n\tflex: 1;\n\twidth: 100%;\n`\n\nconst IngredientsWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n\n\t@media (max-width: 400px) {\n\t\tflex-direction: column;\n\t}\n`\n\nconst Secondary = styled.div`\n\tflex: 1 1 20%;\n\ttext-align: right;\n\tfont-size: 11px;\n\tfont-style: italic;\n\tjustify-content: flex-end;\n\talign-items: center;\n\tdisplay: flex;\n\tcolor: #444;\n`\n\nconst Header = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 4px;\n\twidth: 100%;\n`\n"],"sourceRoot":""}