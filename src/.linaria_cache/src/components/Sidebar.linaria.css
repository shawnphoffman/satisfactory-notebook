.h1ud5ej5{margin:18px 0 12px 0;font-weight:bold;}
.srm2hks{margin:6px 0;}
.s6dt1cv{min-width:260px;background:#bbb;position:-webkit-sticky;position:sticky;top:0;height:100vh;padding:10px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}@media print{.s6dt1cv{display:none;}}@media screen and (max-width:600px){.s6dt1cv{width:100%;position:unset;height:auto;}}
.i1cjjbvk{margin:12px 0 12px 18px;font-size:0.9em;}
.s1sz23ug{font-size:0.8em;margin:12px 0 12px 18px;}
.hnnpna5{font-size:0.8em;font-style:italic;margin-left:18px;margin-top:2px;color:#444;}
.l1p0t9lw{color:darkred;cursor:pointer;}
.l1wf01e7{max-width:100%;height:auto;}
.rmb5ate{color:darkred;cursor:pointer;font-weight:bold;}
@media (max-width:600px){.h1jz6y89{display:none;}}
.d1brdxkc{width:240px;font-size:11px;color:#555;line-height:1.4;font-style:italic;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}@media print{.d1brdxkc{display:none;}}@media (max-width:600px){.d1brdxkc{display:none;}}
/*# sourceMappingURL=data:application/json;base64,*/