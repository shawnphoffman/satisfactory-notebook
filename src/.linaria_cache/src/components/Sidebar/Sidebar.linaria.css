.sj7l98v{margin:6px 0;}
.syic5n5{min-width:260px;background:#bbb;position:-webkit-sticky;position:sticky;top:0;height:100vh;padding:10px;box-sizing:border-box;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;}@media print{.syic5n5{display:none;}}@media screen and (max-width:600px){.syic5n5{width:100%;position:unset;height:auto;}}
.shm2cnn{font-size:0.8em;margin:12px 0 12px 18px;}
.l134rfnz{max-width:100%;height:auto;}
.r1q5z91p{color:darkred;cursor:pointer;font-weight:bold;}
@media (max-width:600px){.h1ujhncf{display:none;}}
.del5ggx{width:240px;font-size:11px;color:#555;line-height:1.4;font-style:italic;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;}@media print{.del5ggx{display:none;}}@media (max-width:600px){.del5ggx{display:none;}}
/*# sourceMappingURL=data:application/json;base64,*/